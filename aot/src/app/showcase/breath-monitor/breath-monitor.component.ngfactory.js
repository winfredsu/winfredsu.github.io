/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from '@angular/core';
import * as i1 from '../../../../../src/app/showcase/breath-monitor/breath-monitor.component';
var styles_BreathMonitorComponent = [];
export var RenderType_BreathMonitorComponent = i0.ɵcrt({ encapsulation: 2,
    styles: styles_BreathMonitorComponent, data: {} });
export function View_BreathMonitorComponent_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 35, 'div', [['class',
                'content-sm container plain-content']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n	'])), (_l()(),
            i0.ɵeld(0, null, null, 32, 'div', [['class', 'row']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n		'])), (_l()(), i0.ɵeld(0, null, null, 29, 'div', [['class',
                'col-lg-10 col-lg-offset-1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n			'])), (_l()(), i0.ɵeld(0, null, null, 3, 'h1', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Breath Monitor'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'text-uppercase margin-l-40 visible-lg-inline']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Smart Healthcare'])), (_l()(), i0.ɵted(null, ['\n			'])), (_l()(), i0.ɵeld(0, null, null, 4, 'div', [['class',
                'well']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n				'])), (_l()(), i0.ɵeld(0, null, null, 1, 'em', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n				Respiration rate (rate of breathing) is a primary vital sign that indicates human body\'s functions. Meanwhile, breathing generates distance movement, which can be collected as energy. Can we monitor breathing condition using breathing energy?\n				'])),
        (_l()(), i0.ɵted(null, ['\n			'])), (_l()(), i0.ɵted(null, ['\n			'])),
        (_l()(), i0.ɵeld(0, null, null, 3, 'div', [['class', 'embed-responsive embed-responsive-16by9 margin-b-30']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n    			'])), (_l()(), i0.ɵeld(0, null, null, 0, 'iframe', [['class', 'embed-responsive-item'], ['src', 'https://www.youtube.com/embed/jK77uDYnLV4']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n			'])), (_l()(), i0.ɵted(null, ['\n			'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Breathing generates distance movement, which can be collected as energy. These energy can be utilized to measure the frequency of breathing, and even heart-rate and pulse oximeter. There\'s a wide range of applications such as wearable devices for babies, pregnants and fitness people. '])),
        (_l()(), i0.ɵted(null, ['\n			'])), (_l()(), i0.ɵeld(0, null, null, 4, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['However, one of the most challenging thing about monitoring breathing with breathing power is that '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'strong', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['the power is neither stable nor continuous'])), (_l()(), i0.ɵted(null, ['. Using conventional microprocessors in such systems will lead to an unfortunate dilemma: the frequent power outage will destroy all intermediate data in the processor, while storing all those data into Flash memory is both energy and time consuming. '])),
        (_l()(), i0.ɵted(null, [' \n			'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Fortunately, nonvolatile processor makes it possible to survive a power failure at negligible time and energy cost. This demo video shows a self-powered breath monitoring system consisting of a breath energy harvester (from Tahzib Safwat @ Penn State University), a nonvolatile processor and a LCD screen. The screen shows pulsed data including averaged breathing frequency and last time breath frequency. The higher 2 bits of LCD screen stand for average breathing frequency calculated through past 3 times breathing intervals. The lower 2 bits stand for the last time breathing frequency. An "L" indicates your breathing is too slow (<12 times/min), and an "H" indicates too high breathing frequency (>48 times/min).'])),
        (_l()(), i0.ɵted(null, ['\n		'])), (_l()(), i0.ɵted(null, ['\n	'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n']))], null, null);
}
export function View_BreathMonitorComponent_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 1, 'nvlabs-breath-monitor', [], null, null, null, View_BreathMonitorComponent_0, RenderType_BreathMonitorComponent)), i0.ɵdid(49152, null, 0, i1.BreathMonitorComponent, [], null, null)], null, null);
}
export var BreathMonitorComponentNgFactory = i0.ɵccf('nvlabs-breath-monitor', i1.BreathMonitorComponent, View_BreathMonitorComponent_Host_0, {}, {}, []);
//# sourceMappingURL=breath-monitor.component.ngfactory.js.map